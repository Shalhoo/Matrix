#pragma once

template <class T>
class Pure {
public:
	virtual void push_back(T data) = 0;
	virtual void insert(int index, T data) = 0;
	virtual size_t list_size() = 0;
	virtual void erase(int index) = 0;
};

//ХЌеобходимо реализовать самописные шаблонные контейнеры, 
// реализовать в них методы дл€ удобной работы и использовать эти контейнеры в коде программы
// 
//Х онтейнер List
//ХPure абстрактный класс.
// ƒолжен содержать методы, характерные дл€ контейнеров, содержащих список объектов
//Хƒолжны быть объ€влены :
//Хћетод добавлени€ элемента в конец
//Хћетод добавлени€ элемента в позицию n
//Хћетод удалени€ элементы из позиции n
//Хћетод вз€ти€ текущего количества элементов
// 
//Х онтейнер LinkedList
//Х–еализаци€ хранени€ должна быть аналогична реализации list из стандартной библиотеки шаблонов 
// Ц элементы должны хранитьс€ в списком, указыва€ последовательно друг на друга
//Хƒолжен наследоватьс€ от контейнера List, реализовывать все его методы, а так же иметь конструктор
//Х»спользовать дл€ хранени€ символов в линии и дл€ хранени€ линий в менеджере приложени€
// 
//Х онтейнер ArrayList
//Х–еализаци€ хранени€ должна быть аналогична реализации vector из стандартной библиотеки шаблонов Ц 
// элементы должны хранитьс€ в массиве
//Хƒолжен наследоватьс€ от контейнера List, реализовывать все его методы, а так же иметь конструктор
//Х»спользовать дл€ хранени€ миллисекундных дат при генерации или анимировании линий и взрывов.